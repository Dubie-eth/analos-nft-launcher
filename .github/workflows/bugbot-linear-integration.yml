name: Bugbot Linear Integration

on:
  pull_request:
    types: [opened, synchronize, closed]
  workflow_dispatch:

jobs:
  bugbot-integration:
    runs-on: ubuntu-latest
    name: Process Bugbot Findings
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Process Bugbot findings
      if: github.event.pull_request.state == 'closed' && github.event.pull_request.merged == false
      uses: actions/github-script@v7
      with:
        script: |
          // Get PR comments from Bugbot
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          
          const bugbotComments = comments.data.filter(comment => 
            comment.user.login.includes('bugbot') || 
            comment.body.includes('🐛') ||
            comment.body.includes('Bug found')
          );
          
          if (bugbotComments.length > 0) {
            // Create Linear issue for failed PR
            const issueTitle = `🚨 PR Failed Bugbot Review: ${context.payload.pull_request.title}`;
            const issueBody = `
            ## Bugbot Review Failed
            
            **PR**: ${context.payload.pull_request.html_url}
            **Branch**: ${context.payload.pull_request.head.ref}
            **Author**: ${context.payload.pull_request.user.login}
            
            ## Bugbot Findings
            
            ${bugbotComments.map(comment => `### ${comment.created_at}\n${comment.body}`).join('\n\n')}
            
            ## Action Required
            
            Please review the Bugbot findings and fix the issues before re-opening the PR.
            
            ## Labels
            - bug
            - P1-High
            - code-review
            `;
            
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['bug', 'P1-High', 'code-review']
            });
            
            console.log(`Created Linear issue #${issue.data.number} for failed Bugbot review`);
          }

  create-linear-issue-on-findings:
    runs-on: ubuntu-latest
    name: Create Linear Issues for Critical Findings
    if: github.event.pull_request.state == 'open'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Monitor for critical Bugbot findings
      uses: actions/github-script@v7
      with:
        script: |
          // Check for new Bugbot comments
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.issue.number
          });
          
          const recentBugbotComments = comments.data.filter(comment => {
            const isRecent = new Date(comment.created_at) > new Date(Date.now() - 5 * 60 * 1000); // Last 5 minutes
            const isBugbot = comment.user.login.includes('bugbot');
            const isCritical = comment.body.includes('🚨') || comment.body.includes('CRITICAL');
            return isRecent && isBugbot && isCritical;
          });
          
          for (const comment of recentBugbotComments) {
            if (comment.body.includes('🚨') || comment.body.includes('CRITICAL')) {
              // Create urgent Linear issue
              const issueTitle = `🚨 CRITICAL: Bugbot Found Security Issue`;
              const issueBody = `
              ## Critical Bugbot Finding
              
              **PR**: ${context.payload.pull_request.html_url}
              **Finding**: ${comment.body}
              
              ## Immediate Action Required
              
              This is a critical finding that requires immediate attention.
              
              ## Labels
              - security
              - P0-Critical
              - bugbot-finding
              `;
              
              const issue = await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: issueTitle,
                body: issueBody,
                labels: ['security', 'P0-Critical', 'bugbot-finding']
              });
              
              console.log(`Created critical Linear issue #${issue.data.number}`);
            }
          }
